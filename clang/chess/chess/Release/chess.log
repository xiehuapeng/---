  chess.cpp
E:\code\clang\chess\chess\logger\logger.h(334,30): warning C4251: “logger::filepath”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“logger”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\xstring(4575): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
E:\code\clang\chess\chess\logger\logger.h(337,33): warning C4251: “logger::logger_file_mutex”: class“std::mutex”需要有 dll 接口由 class“logger”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\mutex(87): message : 参见“std::mutex”的声明
E:\code\clang\chess\chess\logger\logger.h(341,43): warning C4251: “logger::logger_console_mutex”: class“std::mutex”需要有 dll 接口由 class“logger”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\mutex(87): message : 参见“std::mutex”的声明
E:\code\clang\chess\chess\chess.cpp(79,15): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
E:\code\clang\chess\chess\chess.cpp(80,15): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\xmemory(671,103): warning C4244: “参数”: 从“_Ty”转换到“_Tp”，可能丢失数据
          with
          [
              _Ty=int
          ]
          and
          [
              _Tp=float
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\vector(682): message : 查看对正在编译的函数 模板 实例化“void std::_Default_allocator_traits<_Alloc>::construct<_Ty,int,int>(_Alloc &,_Objty *const ,int &&,int &&)”的引用
          with
          [
              _Alloc=std::allocator<cv::Vec2f>,
              _Ty=cv::Vec<float,2>,
              _Objty=cv::Vec<float,2>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\vector(687): message : 查看对正在编译的函数 模板 实例化“void std::_Default_allocator_traits<_Alloc>::construct<_Ty,int,int>(_Alloc &,_Objty *const ,int &&,int &&)”的引用
          with
          [
              _Alloc=std::allocator<cv::Vec2f>,
              _Ty=cv::Vec<float,2>,
              _Objty=cv::Vec<float,2>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\vector(700): message : 查看对正在编译的函数 模板 实例化“_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_back_with_unused_capacity<int,int>(int &&,int &&)”的引用
          with
          [
              _Ty=cv::Vec2f
          ]
E:\code\clang\chess\chess\chess.cpp(83): message : 查看对正在编译的函数 模板 实例化“_Ty &std::vector<_Ty,std::allocator<_Ty>>::emplace_back<int,int>(int &&,int &&)”的引用
          with
          [
              _Ty=cv::Vec2f
          ]
    正在创建库 E:\code\clang\chess\Release\chess.lib 和对象 E:\code\clang\chess\Release\chess.exp
  正在生成代码
  3 of 2017 functions ( 0.1%) were compiled, the rest were copied from previous compilation.
    0 functions were new in current compilation
    2 functions had inline decision re-evaluated but remain unchanged
  已完成代码的生成
  chess.vcxproj -> E:\code\clang\chess\Release\chess.exe
